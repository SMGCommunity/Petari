#pragma once

#include <JSystem/JGeometry/TVec.hpp>

class LiveActor;
class RushEndInfo;
class Triangle;
class HitSensor;
class BckCtrlData;
class MarioActor;

namespace MarioAccess {
    void getTakePos(TVec3f *);
    bool isOnActor(LiveActor *);
    bool isOnGround(u32);
    bool isHipDropFalling();
    bool isHipDropLand();
    bool isSwingAction();
    bool isInRush();
    bool isSquat();
    bool isParalyzing();
    bool isTeresaDisappear();
    bool isFlying();
    bool isNeedBrakingCamera();
    s32 getCameraCubeCode();
    bool isSwimming();
    bool isSkating();
    Triangle* getGroundingPolygon(u32);
    Triangle* getShadowingPolygon();
    f32 getShadowHeight();
    void forceKill(u32, u32);
    bool isOnPress();
    bool isDisableFpView();
    bool isFpViewChangingFailure();
    void stopFpView();
    void noticeDashChance();
    void setWalkingReset(f32);
    void forceFly(const TVec3f &, const TVec3f &, s32);
    void setJumpVec(const TVec3f &);
    void forceJump(const TVec3f &, u32);
    void freeJump(const TVec3f &, u32);
    void tornadoJump();
    void tornadoJumpMini();
    void becomeNormalJumpStatus();
    void setFrontVecKeepUp(const TVec3f &, u16);
    void setFrontVecTarget(const TVec3f &, u16);
    void getThrowVec(TVec3f *);
    void setTrans(const TVec3f &, u16);
    void endRush(const RushEndInfo *);
    void incLife(u32);
    bool isConfrontDeath();
    void addStarPiece();
    void getStarPieceDirect();
    MtxPtr getJointMtx(const char *);
    const TVec3f& getVelocity();
    const TVec3f& getLastMove();
    void hide();
    void show();
    HitSensor* getTakingSensor();
    void dropTakingActor();
    void killTakingActor();
    f32 getAnimationFrameMax();
    void changeAnimationJ(const char *);
    void changeAnimationE(const char *, s32);
    void changeAnimationE(const char *, const char *);
    void changeAnimationE(const char *, const BckCtrlData &);
    void keepCurrentAnimation();
    void progressAnimation();
    const char* getCurrentBckName();
    void setAnimationBlendWeight(const f32 *);
    void setSpot(f32, u32);
    void offControl();
    bool isOffControl();
    void onControl(bool);
    void setStateWait();
    void startTalk(const LiveActor *);
    void endTalk();
    void readyRemoteDemo();
    void onFollowDemo();
    void setBaseMtx(MtxPtr);
    MtxPtr getBaseMtx();
    bool calcSpinPullVelocity(TVec3f *, const TVec3f &);
    void tryCoinPull();
    void addVelocity(const TVec3f &);
    void addVelocityFromArea(const TVec3f &);
    bool isOnWaterSurface();
    bool calcWorldPadDir(TVec3f *, f32, f32);
    void preventRush();
    MarioActor* getPlayerActor();
    void validateSensor();
    void incOxygen(u32);
    void scatterStarPiece(u32);
    void startDownWipe();
    void readyDemo();
    void endRemoteDemo(const RushEndInfo *);
    bool isInWaterMode();
    void changeItemStatus(u32);
};
